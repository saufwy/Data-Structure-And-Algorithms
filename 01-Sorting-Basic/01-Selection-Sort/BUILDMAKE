#edit-mode: -*- python -*-
#encoding: UTF-8

# 工作路径
WORKROOT('../../')

# 使用硬链接copy.
CopyUsingHardLink(True)

# 支持32位/64位平台编译
#ENABLE_MULTI_LIBS(True)

# C预处理器参数.
CPPFLAGS('-D_GNU_SOURCE -D__STDC_LIMIT_MACROS -DVERSION=\\\"1.9.8.7\\\"')
# 为32位目标编译指定额外的预处理参数
#CPPFLAGS_32('-D_XOPEN_SOURE=500')

# C编译参数.
CFLAGS('-g -pipe -W -Wall -fPIC')

# C++编译参数.
CXXFLAGS('-g -pipe -W -Wall -fPIC -std=c++11')

# 针对某些特定文件增加特定的编译参数
# 对应的特定文件通过user_sources_extra里头指明
# CXXFLAGS_EXTRA(' -fno-rtti')

# 头文件路径.
INCPATHS('../deps/')

# 使用库
#LIBS('./lib01-Selection-Sort.a')

# 链接参数.
LDFLAGS('-lpthread -lcrypto -lrt')

# 依赖模块
CONFIGS('lib2-64/ullib')

# 为32位/64位指定不同的依赖路径.
#CONFIGS_32('lib2/ullib')
#CONFIGS_64('lib2-64/ullib')

user_sources='main.cpp'
user_headers='sort_test_helper.h'

# 需要应用CXXFLAGS_EXTRA 的文件
# user_sources_extra('src/webrtc/WebrtcStream.cpp src/webrtc/MediaGatewayImpl.cpp')

# 可执行文件
Application('01-Selection-Sort',Sources(user_sources))
# 静态库
#StaticLibrary('01-Selection-Sort',Sources(user_sources),HeaderFiles(user_headers))
# 共享库
#SharedLibrary('01-Selection-Sort',Sources(user_sources),HeaderFiles(user_headers))
# 子目录
#Directory('demo')

